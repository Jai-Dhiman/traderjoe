name: Auto-Exit Routine

on:
  schedule:
    # Run at 12:00 PM PST (3:00 PM ET) on weekdays
    # PST is UTC-8, so 12:00 PM PST = 20:00 UTC (8:00 PM UTC)
    - cron: '0 20 * * 1-5'
  workflow_dispatch: # Allow manual trigger for testing

env:
  RUST_BACKTRACE: 1
  RUST_LOG: traderjoe=info,sqlx=warn
  LLM_PROVIDER: cerebras
  PRIMARY_MODEL: llama-3.3-70b
  FALLBACK_MODEL: llama-3.1-8b

jobs:
  auto_exit:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event.schedule && github.event_name == 'schedule')
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if Market is Open
        id: market_check
        run: |
          # Get current day of week (1=Monday, ..., 7=Sunday)
          DOW=$(date -u +%u)

          # Get current hour in ET using America/New_York timezone
          HOUR_ET=$(TZ=America/New_York date +%H)
          MINUTE_ET=$(TZ=America/New_York date +%M)

          # Get current date for logging
          DATE_ET=$(TZ=America/New_York date '+%Y-%m-%d %H:%M:%S %Z')
          echo "Current time: $DATE_ET"

          # Check if it's a weekday (Mon-Fri = 1-5)
          if [ $DOW -ge 6 ]; then
            echo "🚫 Market is closed (weekend: day $DOW)"
            echo "Skipping workflow to save API credits"
            exit 0  # Exit gracefully, not as failure
          fi

          # Auto-exit should run during market hours (9:30-16:00 ET)
          CURRENT_MINUTES=$((10#$HOUR_ET * 60 + 10#$MINUTE_ET))
          MARKET_OPEN_MINUTES=$((9 * 60 + 30))  # 9:30 AM
          MARKET_CLOSE_MINUTES=$((16 * 60))     # 4:00 PM

          if [ $CURRENT_MINUTES -lt $MARKET_OPEN_MINUTES ] || [ $CURRENT_MINUTES -ge $MARKET_CLOSE_MINUTES ]; then
            echo "🚫 Market is closed (current: ${HOUR_ET}:${MINUTE_ET} ET)"
            echo "Skipping workflow to save API credits"
            exit 0  # Exit gracefully
          fi

          echo "✅ Market is open (${HOUR_ET}:${MINUTE_ET} ET) - proceeding with auto-exit checks"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          # Cache key includes Cargo.lock for dependency changes
          # Automatically handles target/ and ~/.cargo caching
          shared-key: "release"
          cache-on-failure: true

      - name: Build TraderJoe
        env:
          SQLX_OFFLINE: true
        run: cargo build --release

      - name: Check Current Positions
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          echo "📊 Checking open positions..."
          ./target/release/traderjoe positions 2>&1 | tee /tmp/positions_before.txt || echo "⚠️  No open positions or error retrieving positions"

      - name: Run Auto-Exit Checks
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
          PAPER_TRADING: true
        run: |
          set +e  # Don't exit on error

          echo "🔍 Running auto-exit checks..."
          echo "Checking stop-loss, take-profit, and time-based exits"

          ./target/release/traderjoe auto-exit 2>&1 | tee /tmp/auto_exit_output.txt
          EXIT_CODE=${PIPESTATUS[0]}

          echo ""
          echo "Exit code: $EXIT_CODE"

          if [ $EXIT_CODE -eq 0 ]; then
            echo "✅ Auto-exit checks completed successfully"
          else
            echo "⚠️  Auto-exit completed with warnings (exit code: $EXIT_CODE)"
            echo "This is normal if there are no open positions to exit"
          fi

      - name: Display Updated Positions
        if: always()
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          echo "📊 Updated positions after auto-exit:"
          ./target/release/traderjoe positions 2>&1 | tee /tmp/positions_after.txt || echo "⚠️  No open positions"

      - name: Persist Exit Summary to Database
        if: always()
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo "📝 Auto-exit results persisted to database..."
          echo "   All exit actions are automatically stored in paper_trades table"
          echo "   Check exit_reason field for details (AUTO_EXIT, STOP_LOSS, TAKE_PROFIT)"

          # The auto-exit command already persists to database
          echo "✅ Results available in paper_trades table"

      - name: Summary
        if: always()
        run: |
          echo ""
          echo "═══════════════════════════════════════════════"
          echo "🏁 Auto-Exit Check Complete!"
          echo "═══════════════════════════════════════════════"
          echo ""
          echo "Exit Criteria:"
          echo "  • ⏰ Time-based: 3:00 PM ET (market close)"
          echo "  • 🛑 Stop-loss: -50% from entry"
          echo "  • 🎯 Take-profit: +30% from entry"
          echo "  • ✅ All criteria checked automatically"
          echo ""
          echo "Results stored in Neon database (paper_trades table)"
          echo "═══════════════════════════════════════════════"
